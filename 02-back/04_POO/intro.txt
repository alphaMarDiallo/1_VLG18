3 moyens de créer un site web :
    - from scratch
    - cms 
    - framework

-----------------------------------------------------------------------------
Orienté objet :
    Inconvénients : 
        -> Techniquement, on ne peut rien faire de plus avec  l'orenté objet qu'avec le procédural.
        -> En général, l'approche orienté objet est moins intuitive que l'approche procédural. Il est effectivement plus facile de décomposer un problème séquentiellement ligne par ligne qu'avec une interaction entre objet. => permet une meilleure évolution vers les autres langages (c++, java, c#...)
        -> légère perte de performance, car on passe par des  methodes (get et set) au lieu de travailler directement sur la variable ou la structure.
    
    Avantage : 
        -> Modulariser afin d'avoir un code évolutif. Si on a une série de if/else à changer à droite à gauche;  en procédural il faudrait aller dans tous les fichiers dans lequel on doit faire des modifications alors qu'avec l'OO on aura juste à modifier le module correspondant.
        -> Encourage le travcail collaboratif; ( de ré-ouvrir toutes les pages, l'UML permet de décrire le comportement de l'application et les intéractions entre objets.)
        -> Masquer la complexité grâce au principe d'encapsulation.
            => en effet, c'est plus simple de lire :
                panier-> affichage() plutôt qu'une série de if/else et de boucle
        -> Possibilité de documenter son code.
        -> Ré-utiliser le code, ne pas repartir de 0, effectuer un code type pouvant être reprise sur d'autres projets.
        -> Faciliter la maintenance et les mise à jour.
            => tout se passe dans la classe en question.
        -> assou^plir le code, factorisation du code : meilleir conceptualisation.
            => les pages seront moins chargées.
        -> Permet d'appréhander les autres langages beaucoup, plus facilement : java, .net, c++, c#...
        -> Plus d'option dans le langage (encapsulation, heritage, exception, interface...).

--------------------------------------------------------
Vocabulaire : 

    variable = propriété(= attribut)
    fonction = methode
    objet = instance

Une variable permet de contenir une information
Un array permet de contenir plusieurs informations
Un classe permet de contenir : des propriétés et des méthodes comportant des traitements
L'objet qui va permmettre d'atteindre les éléments contenus dans la classe.

    Class : (= plan, modèle)
        Une classe est un regroupement d'informations (propriétés, valeurs, méthodes) relatives à un sujet global.
    
    Objet : (= application du plan)
            un objet permet d'atteindre/ d'accéder aux informations  contenues dans la classe.
    
    Exemple : class Voiture
                    objet = 'objet oiturev'
                            propriétés : $couleur, $taille, etc...
                            méthodes : demarer(), rouler(), etc..

3 bonnes questions à se poser lorsque l'on développe : 
    - mon projet est-il compréhansible par les autres développeurs ?
    - Mon projet est-il réutilisable par un autre dév ou devrat-il réécrire    toutes les classes ?
    -Mon projet prévoit-il les évolutions futures ?